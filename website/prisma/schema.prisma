//
// This is your Prisma schema file
// learn more about it in the docs: https://pris.ly/d/prisma-schema
//

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol", "clientExtensions"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id            Int       @id @default(autoincrement())
  userGroupId   Int       @default(0)
  name          String    @unique @default("")
  email         String    @unique @default("")
  emailVerified DateTime?
  password      String    @default("")
  nickname      String    @default("")
  avatar        String    @default("")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt
  deletedAt     DateTime?

  userGroup UserGroup @relation(fields: [userGroupId], references: [id])

  userSessions UserSession[]
  userAccounts UserAccount[]
  BlogPost     BlogPost[]

  @@index([userGroupId])
  @@index([deletedAt])
}

model UserGroup {
  id    Int    @id @default(autoincrement())
  name  String @unique @default("")
  color String @default("")
  icon  String @default("")

  users User[]
}

model UserAccount {
  id                Int    @id @default(autoincrement())
  userId            Int    @default(0)
  type              String @default("")
  provider          String @default("")
  providerAccountId String @default("")
  refreshToken      String @default("")
  accessToken       String @default("")
  expiresIn         Int    @default(0)
  tokenType         String @default("")
  scope             String @default("")
  idToken           String @default("")
  sessionState      String @default("")

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model UserSession {
  id        Int      @id @default(autoincrement())
  userId    Int      @default(0)
  token     String   @unique
  expiredAt DateTime

  user User @relation(fields: [userId], references: [id])

  @@index([userId])
}

model District {
  id       Int    @id @default(autoincrement())
  parentId Int    @default(0)
  name     String @default("")
  code     String @unique @default("")
  zipCode  String @default("")
  areaCode String @default("")

  @@index([parentId])
  @@index([name])
}

model DistrictClosure {
  id         Int @id @default(autoincrement())
  ancestor   Int @default(0)
  descendant Int @default(0)
  distance   Int @default(0)

  @@index([ancestor, descendant])
  @@index([descendant, distance])
  @@index([distance])
}

model BlogCategory {
  id       Int        @id @default(autoincrement())
  parentId Int        @default(0)
  slug     String     @unique @default("")
  name     String     @default("")
  BlogPost BlogPost[]

  @@index([parentId])
  @@index([slug])
  @@index([name])
}

model BlogPost {
  id             Int       @id @default(autoincrement())
  slug           String    @unique @default("")
  userId         Int       @default(0)
  blogCategoryId Int       @default(0)
  viewCount      Int       @default(0)
  commentCount   Int       @default(0)
  title          String    @default("")
  excerpt        String    @default("")
  content        String    @default("")
  createdAt      DateTime  @default(now())
  updatedAt      DateTime? @updatedAt
  deletedAt      DateTime?

  user         User         @relation(fields: [userId], references: [id])
  blogCategory BlogCategory @relation(fields: [blogCategoryId], references: [id])

  @@index([userId])
  @@index([blogCategoryId])
  @@index([slug])
}
